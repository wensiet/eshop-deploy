---
- name: Install kubectl
  hosts: servers
  remote_user: root
  tasks:
    - name: Get Kubernetes stable version
      command: 'curl -L -s https://dl.k8s.io/release/stable.txt'
      register: kubernetes_stable_version
    - name: Curl release
      command: 'curl -LO "https://dl.k8s.io/release/{{ kubernetes_stable_version.stdout }}/bin/linux/amd64/kubectl"'
      become: yes
    - name: Install kubectl
      command: "sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl"
      become: yes
    - name: Ensure kubectl is installed
      command: "kubectl version --client"
      become: yes
- name: Install Kind
  hosts: servers
  remote_user: root
  tasks:
    - name: Curl release
      command: "curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.22.0/kind-linux-amd64"
      become: yes
    - name: Grant permissions
      command: "chmod +x ./kind"
      become: yes
    - name: Move Kind to bin
      command: "mv ./kind /usr/local/bin/kind"
      become: yes
    - name: Ensure Kind is installed
      command: "kind version"
      become: yes
- name: Install Helm
  hosts: servers
  remote_user: root
  tasks:
    - name: Curl release
      command: "curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3"
      become: yes
    - name: Grant permissions
      command: "chmod 700 get_helm.sh"
      become: yes
    - name: Install Helm
      command: "bash get_helm.sh"
      become: yes
    - name: Ensure Helm is installed
      command: "helm version"
      become: yes
- name: Deploy single-node kind cluster
  hosts: servers
  remote_user: root
  tasks:
    - name: Create config.yaml file
      ansible.builtin.copy:
        content: |
          kind: Cluster
          apiVersion: kind.x-k8s.io/v1alpha4
          networking:
            apiServerAddress: "{{ ansible_host }}"
            apiServerPort: 6443
        dest: config.yaml
    - name: Create kind cluster
      ansible.builtin.command: kind create cluster --image=kindest/node:v1.23.0 --name remote --config=config.yaml
      become: yes
    - name: Get kubeconfig
      command: >
        kind get kubeconfig --name=remote
      register: kubeconfig_output
      become: yes
    - name: Save kubeconfig to local file
      ansible.builtin.fetch:
        src: "{{ kubeconfig_output.stdout }}"
        dest: "conf_{{ ansible_host }}.yaml"